<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RAKIT | <%= title %></title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
</head>
<body>
    <div style="margin: auto;">
        <div class="row justify-content-center m-2">
            <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="card-header text-center">
                        <%= title %>
                    </div>
                    <div class="card-body">
                        <div id="loginContainer">
                            <form id="loginForm">
                                <div class="input-group input-group-sm mb-3">
                                    <input type="text" id="usernameText" class="form-control" placeholder="Username.." aria-label="Isi username anda" aria-describedby="loginButton" required>
                                    <button type="button" class="btn btn-primary px-3" type="button" id="loginButton">
                                        <i class="bi bi-send"></i> Join
                                    </button>
                                </div>
                            </form>
                        </div>
                        
                        <div id="mainContainer" class="d-none">
                            <blockquote class="blockquote">
                                <p><%= quote.split('~')[0] %></p>
                                <footer class="blockquote-footer"><span id="userName" class="text-capitalize"></span> in <cite title="Source Title">IT</cite></footer>
                            </blockquote>

                            <div id="rangkumanContainer" class="mt-3 d-none">
                                <h5 class="card-title">1</h5>
                                <p class="card-text">Question?</p>
                            </div>
                        </div>

                        <div id="loginInfo" class="alert alert-primary d-flex align-items-start d-none" role="alert">
                            <div class="spinner-grow flex-shrink-0 me-2" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <div>
                              An example alert with an icon
                            </div>
                        </div>
                    </div>
                    <ul id="answerContainer" class="list-group list-group-flush d-none">
                    </ul>
                </div>
            </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket    = io();
        var   id        = '';
        var   username  = '';
        var   rangkuman = [
            {
                id      : 1,
                question: 'Apa itu Websocket?',
                bobot   : 0.07,
                answers : [
                    {
                        id   : 'A',
                        label: 'WebSocket merupakan protokol komunikasi yang memungkinkan interaksi dua arah.',
                        point: 6,
                    },
                    {
                        id   : 'B',
                        label: 'WebSocket (WS) adalah protokol komunikasi yang memungkinkan interaksi dua arah secara real-time antar klien.',
                        point: 8,
                    },
                    {
                        id   : 'C',
                        label: 'WebSocket merupakan protokol komunikasi yang memungkinkan interaksi dua arah secara real-time antara klien dan server.',
                        point: 10,
                    },
                ],
            },
            {
                id      : 2,
                question: 'Perbedaan HTTP dan Websocket?',
                bobot   : 0.07,
                answers : [
                    {
                        id   : 'A',
                        label: 'Http hanya bisa mengirim request dan response ke klien, pada websocket ketika koneksi antara klien dan server terhubung, maka keduanya dapat saling mengirim data.',
                        point: 10,
                    },
                    {
                        id   : 'B',
                        label: 'Http bersifat unidirectional, setiap permintaan tidak memerlukan koneksi baru sedangkan websocket memungkinkan koneksi dua arah dengan selalu membuka koneksi baru.',
                        point: 7,
                    },
                    {
                        id   : 'C',
                        label: 'Tidak ada perbedaan yang begitu signifikan.',
                        point: 6,
                    },
                ],
            },
            {
                id      : 3,
                question: 'Kelebihan dari Websocket?',
                bobot   : 0.17,
                answers : [
                    {
                        id   : 'A',
                        label: 'Koneksi 2 arah secara asynchronous, latency time yang sangat tinggi.',
                        point: 4,
                    },
                    {
                        id   : 'B',
                        label: 'Koneksi 2 arah secara synchronous, latency time yang sangat rendah',
                        point: 3,
                    },
                    {
                        id   : 'C',
                        label: 'Koneksi 2 arah secara asynchronous, latency time yang sangat rendah.',
                        point: 10,
                    },
                ],
            },
            {
                id      : 4,
                question: 'Pernyataan mengenai kelebihan Websocket berikut yang paling tepat?',
                bobot   : 0.05,
                answers : [
                    {
                        id   : 'A',
                        label: 'Baik klien maupun server dapat mengirim pesan ke masing2 tujuan secara langsung tanpa pihak yang menerima data harus request terlebih dahulu.',
                        point: 10,
                    },
                    {
                        id   : 'B',
                        label: 'Protokol ini sangat efisien untuk aplikasi yang tidak memerlukan respons cepat.',
                        point: 6,
                    },
                    {
                        id   : 'C',
                        label: 'Websocket hanya didukung browser chrome dan firefox dan kompatibel dengan berbagai teknologi server-side.',
                        point: 7,
                    },
                ],
            },
            {
                id      : 5,
                question: 'Aplikasi yang baik digunakan dengan Websocket?',
                bobot   : 0.05,
                answers : [
                    {
                        id   : 'A',
                        label: 'Game online multiplayer dan aplikasi chatting.',
                        point: 7,
                    },
                    {
                        id   : 'B',
                        label: 'Aplikasi trading dan aplikasi kolaborasi real-time.',
                        point: 8,
                    },
                    {
                        id   : 'C',
                        label: 'Pilihan A dan B benar.',
                        point: 10,
                    },
                ],
            },
            {
                id      : 6,
                question: 'Pernyataan mengenai Socket.IO berikut yang paling tepat?',
                bobot   : 0.05,
                answers : [
                    {
                        id   : 'A',
                        label: 'Socket.IO merupakan library berbasis bahasa pemrograman java.',
                        point: 6,
                    },
                    {
                        id   : 'B',
                        label: 'Dengan Socket.IO kita dapat berkomunikasi secara real-time, dua arah dan komunikasi berbasis event.',
                        point: 10,
                    },
                    {
                        id   : 'C',
                        label: 'Pernyataan A dan B tepat.',
                        point: 6,
                    },
                ],
            },
            {
                id      : 7,
                question: 'Implementasi bahasa pemrograman Socket.IO pada sisi server?',
                bobot   : 0.1,
                answers : [
                    {
                        id   : 'A',
                        label: 'Javascript, Java, PHP.',
                        point: 8,
                    },
                    {
                        id   : 'B',
                        label: 'Javascript, Java, Phyton.',
                        point: 10,
                    },
                    {
                        id   : 'C',
                        label: 'Pilihan A dan B benar.',
                        point: 5,
                    },
                ],
            },
            {
                id      : 8,
                question: 'Implementasi bahasa pemrograman Socket.IO pada sisi klien?',
                bobot   : 0.1,
                answers : [
                    {
                        id   : 'A',
                        label: 'Javascript, Java, Golang.',
                        point: 7,
                    },
                    {
                        id   : 'B',
                        label: 'Javascript, Java, Phyton.',
                        point: 10,
                    },
                    {
                        id   : 'C',
                        label: 'Pilihan A dan B salah.',
                        point: 5,
                    },
                ],
            },
            {
                id      : 9,
                question: 'Pernyataan yang paling tepat mengenai fitur utama Socket.IO?',
                bobot   : 0.14,
                answers : [
                    {
                        id   : 'A',
                        label: 'Event emitter digunakan sebagai penerima data.',
                        point: 3,
                    },
                    {
                        id   : 'B',
                        label: 'Event listener sebagai pengirim sehingga antara client dengan server dapat mengirim pesan dari kedua pihak.',
                        point: 4,
                    },
                    {
                        id   : 'C',
                        label: 'Pernyataan A dan B kurang tepat.',
                        point: 10,
                    },
                ],
            },
            {
                id      : 10,
                question: 'Fitur utama Socket.IO?',
                bobot   : 0.2,
                answers : [
                    {
                        id   : 'A',
                        label: 'Http short-polling fallback, event emitter, event listener dan broadcasting.',
                        point: 3,
                    },
                    {
                        id   : 'B',
                        label: 'Http short-polling fallback, acknowledgements dan broadcasting.',
                        point: 3,
                    },
                    {
                        id   : 'C',
                        label: 'Http long-polling fallback, acknowledgements dan broadcasting.',
                        point: 10,
                    },
                ],
            }
        ];
        var rangkumanCurrent = 0;
        var isFinish         = false;

        // rangkuman.sort(() => Math.random() - 0.5);

        loginButton.addEventListener('click', function(e) {
            e.preventDefault();
            
            const userTxt  = usernameText.value;
            const socketId = socket.id;

            id       = socketId;
            username = userTxt;

            socket.emit("join", {
                id,
                username,
            });

            $('#loginContainer').addClass('d-none');
            $('#mainContainer').removeClass('d-none');
            $('#userName').text(username);

            initQuestion();
        });

        document.addEventListener('click', (e) => {
            if (e.target.matches('#answerContainer a')) {
                e.preventDefault();

                const id                = e.target.getAttribute('data-id');
                const rangkumanSelected = rangkuman[rangkumanCurrent];
                const bobot             = rangkumanSelected.bobot;
                let   point             = 0;

                e.target.classList.add('active');

                const answerSelected = rangkumanSelected.answers.filter(e => e.id == id).map((item) => {
                    point = item.point * bobot * 10;
                });

                if ((rangkumanCurrent + 1) < rangkuman.length) {
                    rangkumanCurrent++;
                    setQuestion();
                } else {
                    doneQuestion();
                }

                socket.emit("answer", {
                    id,
                    username,
                    point,
                    isFinish,
                });
            }
        });

        function initQuestion() {
            const content = `
            <div class="spinner-grow flex-shrink-0 me-2" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <div>
                Sebentar lagi akan dimulai. Siapkan Dirimu!!!
            </div>
            `;

            $('#loginInfo').removeClass('alert-warning d-none').addClass('alert-primary').html(content);
        }

        function setQuestion() {
            const el          = $('#rangkumanContainer');
            const dtRangkuman = rangkuman[rangkumanCurrent];
            let   answer      = '';

            dtRangkuman.answers.map((item) => {
                answer += `
                <a href="#" class="list-group-item list-group-item-action" data-id="${item.id}">
                    <strong>${item.id}.</strong> ${item.label}
                </a>`;
            });

            el.find('h5').html(`${rangkumanCurrent+1}/${rangkuman.length} <small>rangkuman</small>`);
            el.find('p').text(dtRangkuman.question);
            $('#answerContainer').attr('data-id', dtRangkuman.id).html(answer);
        }

        function doneQuestion() {
            const content = `
            <i class="bi bi-stars flex-shrink-0 me-2"></i>
            <div>
                Selamat Kamu sudah berhasil merangkum sharing rakit hari ini.
                <br>
                Lihat pada papan <strong>monitoring</strong> untuk melihat detail <strong>point</strong> kamu.
            </div>
            `;

            isFinish = true;

            $('#rangkumanContainer').addClass('d-none');
            $('#answerContainer').addClass('d-none').empty();
            $('#loginInfo').removeClass('alert-primary alert-warning d-none').addClass('alert-success').html(content);
        }

        socket.on("start", (isStart) => {
            if (id == '' && username == '' || !isStart) {
                console.log('Failed!!');
                return;
            }

            if (!isFinish) {
                setQuestion();

                $('#loginInfo').addClass('d-none').empty();
                $('#rangkumanContainer').removeClass('d-none');
                $('#answerContainer').removeClass('d-none');
            }
        });

        socket.on("join-failed", (...data) => {
            const [_id, _username] = data;
            const content          = `
            <i class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2"></i>
            <div>
                Username sudah ada, bisa diganti??
            </div>
            `;

            if (id == _id) {
                id       = '';
                username = '';

                $('#loginContainer').removeClass('d-none');
                $('#mainContainer').addClass('d-none');
                $('#loginInfo').removeClass('alert-primary d-none').addClass('alert-warning').html(content);
            }
        });
    </script>
</body>
</html>